(in-package :lack.middleware.validation)

(defun string2boolean (value)
  (let ((value (string-downcase value)))
    (cond ((or (string= "true" value)
               (string= "t" value))
           t)
          ((or (string= "null" value)
               (string= "nil" value))
           nil)
          (t (error "Fuck'n error.")))))

(defun value2boolean (value)
  (cond ((stringp value)
         (string2boolean value))
        ((booleanp value)
         value)
        (t (error* :not-supported-type :boolean))))

(defun validator-boolean (name value &key require default-value)
  (when require (warn "ここでは使わんし不要やで"))
  (when default-value (warn "ここでは使わんし不要やで"))
  (handler-case
      (value2boolean value)
    (error ()
      (validation-error* :not-a-valid-boolean name value))))
